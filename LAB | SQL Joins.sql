use sakila;
show Tables;


select * from store;
select * from country;
select * from city;
select * from staff;



-- 1. List the number of films per category.

SELECT c.name, COUNT(f.film_id) as number_of_films
from sakila.film as f
join sakila.film_category as fc
on f.film_id = fc.film_id
JOIN sakila.category as c
ON fc.category_id = c.category_id
GROUP BY c.name;
-- 2. Retrieve the store ID, city, and country for each store.

select s.store_id, ci.city, co.country
from sakila.store as s
join sakila.address as a
on s.address_id = a.address_id
join sakila.city as ci
on ci.city_id = a.city_id
join sakila.country as co
on ci.country_id = co.country_id;


-- 3. Calculate the total revenue generated by each store in dollars.

select s.store_id, CONCAT('$', SUM(p.amount)) as revenue_in_dollars
from sakila.store as s
join sakila.customer as c
on s.store_id = c.store_id
join sakila.payment as p
on p.customer_id = c.customer_id
group by s.store_id;

-- 4. Determine the average running time of films for each category.

select ca.name as category, round(avg(f.length)) as average_running_time
from sakila.category as ca
join sakila.film_category as fca
on fca.category_id = ca.category_id
join sakila.film as f
on f.film_id = fca.film_id
group by ca.name;

-- 5. Identify the film categories with the longest average running time.

select ca.name as category, round(avg(f.length)) as average_running_time
from sakila.category as ca
join sakila.film_category as fca
on fca.category_id = ca.category_id
join sakila.film as f
on f.film_id = fca.film_id
group by ca.name
order by average_running_time desc;

-- 6. Display the top 10 most frequently rented movies in descending order.
select * from rental;

select f.title , count(r.rental_id) as number_of_times_rented
from sakila.film as f
join sakila.inventory as i
on f.film_id = i.film_id
join sakila.rental as r
on r.inventory_id = i.inventory_id
group by title
order by number_of_times_rented desc
limit 10;


-- 7. Determine if "Academy Dinosaur" can be rented from Store 1.

SELECT f.title, r.inventory_id, r.rental_id, i.store_id
FROM sakila.film as f
JOIN sakila.inventory as i
ON f.film_id = i.film_id
JOIN sakila.rental as r
ON i.inventory_id = r.inventory_id
HAVING (f.title = 'ACADEMY DINOSAUR') AND (i.store_id = 1);


SELECT 
	case 
		when EXISTS (
			SELECT 1
			FROM sakila.film as f
			JOIN sakila.inventory as i
			ON f.film_id = i.film_id
			JOIN sakila.rental as r
			ON i.inventory_id = r.inventory_id
			WHERE (f.title = 'ACADEMY DINOSAUR') AND (i.store_id = 1)
        ) then "Yes"
        Else "No"
	End AS is_available;